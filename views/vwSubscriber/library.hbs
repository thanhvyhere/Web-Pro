{{#section 'css'}}
<link href="/css/tailwind.css" rel="stylesheet">
{{/section}}

<h1>Premium</h1>
<hr class="tw-w-[100%] tw-border-[5px] tw-bg-yellow-300">
</hr>
<div class="row d-grids">
    {{#each this.news}}
    <div class="col-sm-4 mb-3 tw-flex tw-justify-center tw-items-center">
        <div class="tw-w-[350px] tw-h-[450px] tw-bg-white tw-rounded-[30px] tw-flex tw-flex-col tw-p-3" style="
                        box-shadow: 0px 2px 4px rgba(0, 0, 0, 1);
                        border: 1px solid black;
                  ">
            <p>Thời gian: {{formatDate CreatedDate}}</p>
            <img src="{{ImageCover}}" alt="{{Title}}"
                class="tw-w-[90%] tw-h-[180px] tw-object-cover tw-self-center tw-mb-0.5">
            <p class="tw-max-w-[100%] tw-line-clamp-2 tw-text-ellipsis tw-mb-0">
                <a href="/newspaper/detail?id={{NewsID}}" class="tw-text-black"><strong>{{Title}}</strong></a>

            </p>

            <div class="tw-text-[#948D8D] tw-max-w-[100%] tw-text-ellipsis tw-line-clamp-3 tw-overflow-hidden">
                {{{Content}}}
            </div>

            <div class="tw-flex tw-flex-row tw-justify-between tw-items-center tw-w-[100%] tw-mt-auto">
                <p style="margin: 0;">Tác giả: {{AuthorName}}</p>
                <div class="tw-flex tw-flex-row tw-justify-center tw-items-center tw-gap-2">
                    {{#if isSaved}}
                    <i class="bi bi-bookmark-fill" id="bookmarkIcon-{{NewsID}}"
                        style="font-size: 2rem; font-weight: 300; cursor: pointer;" data-article-id="{{NewsID}}"
                        data-user-id="{{this.userid}}" data-saved="true"></i>
                    {{else}}
                    <i class="bi bi-bookmark" id="bookmarkIcon-{{NewsID}}"
                        style="font-size: 2rem; font-weight: 300; cursor: pointer;" data-article-id="{{NewsID}}"
                        data-user-id="{{this.userid}}" data-saved="false"></i>
                    {{/if}}
                    <i class="bi bi-download" id="downloadIcon-{{NewsID}}" style="font-size: 2rem; cursor: pointer;"
                        data-article-id="{{NewsID}}"></i>
                    <i class="bi bi-star-fill" style="color: yellow; font-size: 2rem;"></i>
                </div>

            </div>
        </div>
    </div>
    {{/each}}

</div>
<ul class="pagination">
    <li class="page-item disabled">
        <a class="page-link">Trước</a>
    </li>
    {{#each this.pageNumbers}}
    {{#if active}}
    <li class="page-item active">
        <a class="page-link" href="?&page={{value}}">{{value}}</a>
    </li>
    {{else}}
    <li class="page-item">
        <a class="page-link" href="?&page={{value}}">{{value}}</a>
    </li>
    {{/if}}
    {{/each}}
    </li>
    <li class="page-item">
        <a class="page-link" href="#">Sau</a>
    </li>
</ul>
<br><br>
<h1>Gợi ý cho bạn</h1>
<hr class="tw-w-[100%] tw-border-[5px] tw-bg-yellow-300">
</hr>
<div class="row d-grids">
    {{#each this.randomNews}}
    <div class="col-sm-4 mb-3 tw-flex tw-justify-center tw-items-center">
        <div class="tw-w-[350px] tw-h-[450px] tw-bg-white tw-rounded-[30px] tw-flex tw-flex-col tw-p-3" style="
                        box-shadow: 0px 2px 4px rgba(0, 0, 0, 1);
                        border: 1px solid black;
                  ">
            <p>Thời gian: {{formatDate CreatedDate}}</p>
            <img src="{{ImageCover}}" alt="{{Title}}"
                class="tw-w-[90%] tw-h-[180px] tw-object-cover tw-self-center tw-mb-0.5">
            <p class="tw-max-w-[100%] tw-line-clamp-2 tw-text-ellipsis tw-mb-0">
                <a href="/newspaper/detail?id={{NewsID}}" class="tw-text-black"><strong>{{Title}}</strong></a>

            </p>

            <div class="tw-text-[#948D8D] tw-max-w-[100%] tw-text-ellipsis tw-line-clamp-3 tw-overflow-hidden">
                {{{Content}}}
            </div>

            <div class="tw-flex tw-flex-row tw-justify-between tw-items-center tw-w-[100%] tw-mt-auto">
                <p style="margin: 0;">Tác giả: {{AuthorName}}</p>
                <div class="tw-flex tw-flex-row tw-justify-center tw-items-center tw-gap-2">
                    {{#if isSaved}}
                    <i class="bi bi-bookmark-fill" id="bookmarkIcon-{{NewsID}}"
                        style="font-size: 2rem; font-weight: 300; cursor: pointer;" data-article-id="{{NewsID}}"
                        data-user-id="{{this.userid}}" data-saved="true"></i>
                    {{else}}
                    <i class="bi bi-bookmark" id="bookmarkIcon-{{NewsID}}"
                        style="font-size: 2rem; font-weight: 300; cursor: pointer;" data-article-id="{{NewsID}}"
                        data-user-id="{{this.userid}}" data-saved="false"></i>
                    {{/if}}
                    <i class="bi bi-download" id="downloadIcon-{{NewsID}}" style="font-size: 2rem; cursor: pointer;"
                        data-article-id="{{NewsID}}"></i>
                    {{#if Premium}}
                    <i class="bi bi-star-fill" style="color: yellow; font-size: 2rem;"></i>
                    {{/if}}
                </div>

            </div>
        </div>
    </div>
    {{/each}}

</div>
<ul class="pagination">
    <li class="page-item disabled">
        <a class="page-link">Trước</a>
    </li>
    {{#each this.pageNumbers2}}
    {{#if active}}
    <li class="page-item active">
        <a class="page-link" href="?&page2={{value}}">{{value}}</a>
    </li>
    {{else}}
    <li class="page-item">
        <a class="page-link" href="?&page2={{value}}">{{value}}</a>
    </li>
    {{/if}}
    {{/each}}
    </li>
    <li class="page-item">
        <a class="page-link" href="#">Sau</a>
    </li>
</ul>
{{#section 'script'}}
<script>
    document.querySelectorAll('[id^="bookmarkIcon"]').forEach(icon => {
        icon.addEventListener('click', async function () {
            try {
                const isSaved = icon.getAttribute('data-saved') === 'true'; // Kiểm tra trạng thái đã lưu
                const articleId = icon.getAttribute('data-article-id');
                console.log("news: ", articleId)
                const userId = icon.getAttribute('data-user-id');
                console.log("users: ", userId)
                const response = await fetch('/subscriber/save-article', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        NewsID: articleId,
                        id: userId,
                        saved: !isSaved, // Thay đổi trạng thái lưu
                    }),
                });

                const result = await response.json();

                if (result.success) {
                    if (isSaved) {
                        // Đổi sang icon chưa lưu
                        icon.classList.remove('bi-bookmark-fill');
                        icon.classList.add('bi-bookmark');
                        icon.setAttribute('data-saved', 'false');
                    } else {
                        // Đổi sang icon đã lưu
                        icon.classList.remove('bi-bookmark');
                        icon.classList.add('bi-bookmark-fill');
                        icon.setAttribute('data-saved', 'true');
                    }
                } else {
                    console.error('Lỗi khi lưu trạng thái:', result.message);
                }
            } catch (error) {
                console.error('Lỗi kết nối:', error);
            }
        });
    });
</script>
<script>
    document.querySelectorAll('[id^="downloadIcon"]').forEach(icon => {
        icon.addEventListener('click', async function () {
            const articleId = icon.getAttribute('data-article-id'); // Lấy NewsID của bài báo

            try {
                // Gửi request POST đến server để tải bài báo dưới dạng PDF
                const response = await fetch('/subscriber/download-article', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ NewsID: articleId })
                });

                const result = await response.blob(); // Nhận file PDF dưới dạng blob

                // Tạo link tải file PDF
                const downloadUrl = URL.createObjectURL(result);
                const a = document.createElement('a');
                a.href = downloadUrl;
                a.download = 'article.pdf'; // Đặt tên file tải về
                document.body.appendChild(a);
                a.click(); // Mô phỏng click để tải file
                document.body.removeChild(a);
            } catch (error) {
                console.error('Lỗi khi tải bài báo:', error);
            }
        });
    });
</script>
{{/section}}