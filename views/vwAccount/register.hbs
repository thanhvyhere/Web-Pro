{{#section "signupcss"}}
<link rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css">
{{/section}}

{{#section "signupjs"}}
<script>
  document.getElementById('txtPhone').addEventListener('input', function (e) {
    let input = e.target.value.replace(/\D/g, '');
    if (input.length > 3 && input.length <= 6) {
      input = input.slice(0, 3) + '-' + input.slice(3);
    } else if (input.length > 6) {
      input = input.slice(0, 3) + '-' + input.slice(3, 6) + '-' + input.slice(6, 10);
    }
    e.target.value = input;
  });

  function validatePasswordField() {
    const password = document.querySelector('#txtPassword').value;
    const errorField = document.querySelector('#passwordError');
    const minLength = 8;
    const hasUpper = /[A-Z]/.test(password);
    const hasLower = /[a-z]/.test(password);
    const hasNumber = /[0-9]/.test(password);
    const hasSpecialChar = /[!@#\$%\^\&*\)\(+=._-]/.test(password);

    if (password.length < minLength) {
      errorField.textContent = 'Password must be at least 8 characters long.';
      errorField.style.display = 'block';
    } else if (!hasUpper || !hasLower || !hasNumber || !hasSpecialChar) {
      errorField.textContent = 'Password must include uppercase, lowercase, number, and special character.';
      errorField.style.display = 'block';
    } else {
      errorField.textContent = '';
      errorField.style.display = 'none';
    }
  }

  function validateConfirmPasswordField() {
    const password = document.querySelector('#txtPassword').value;
    const confirmPassword = document.querySelector('#txtCPassword').value;
    const confirmError = document.querySelector('#confirmPasswordError');

    if (confirmPassword !== password) {
      confirmError.textContent = 'Passwords do not match.';
      confirmError.style.display = 'block';
    } else {
      confirmError.textContent = '';
      confirmError.style.display = 'none';
    }
  }

  document.querySelector('#txtPassword').addEventListener('input', validatePasswordField);
  document.querySelector('#txtPassword').addEventListener('blur', validatePasswordField);
  document.querySelector('#txtCPassword').addEventListener('input', validateConfirmPasswordField);
  document.querySelector('#txtCPassword').addEventListener('blur', validateConfirmPasswordField);

  function checkValidEmail() {
    const email = document.querySelector('#txtEmail').value;
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (email.length === 0 || !emailRegex.test(email)) {
      document.querySelector('#txtEmail').select();
      return false;
    }
    return true;
  }

  function checkValidPassword() {
    const password = document.querySelector('#txtPassword').value;
    const minLength = 8;
    const hasUpper = /[A-Z]/.test(password);
    const hasLower = /[a-z]/.test(password);
    const hasNumber = /[0-9]/.test(password);
    const hasSpecialChar = /[!@#\$%\^\&*\)\(+=._-]/.test(password);

    if (password.length < minLength || !hasUpper || !hasLower || !hasNumber || !hasSpecialChar) {
      Swal.fire({
        title: 'Warning',
        text: "Password must be at least 8 characters and include uppercase, lowercase, number, and special character.",
        icon: 'warning',
        confirmButtonText: 'OK'
      });
      document.querySelector('#txtPassword').select();
      return false;
    }
    return true;
  }

  $('#fmSignup').on('submit', function (e) {
    e.preventDefault();
    const username = $('#txtUsername').val();
    const password = $('#txtPassword').val();
    const confirmPassword = $('#txtCPassword').val();

    if (!checkValidPassword()) return;

    if (password !== confirmPassword) {
      Swal.fire({
        title: 'Error',
        text: "Passwords do not match. Please re-enter.",
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    if (username.length === 0) {
      Swal.fire({
        title: 'Warning',
        text: "Username cannot be empty.",
        icon: 'warning',
        confirmButtonText: 'OK'
      });
      return;
    }

    if (!checkValidEmail()) {
      Swal.fire({
        title: 'Error',
        text: "Invalid email format.",
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    $.getJSON(`/account/is-available?username=${username}`, function (data) {
      if (data === false) {
        Swal.fire({
          title: 'Warning',
          text: "Username not available. Please choose another.",
          icon: 'warning',
          confirmButtonText: 'OK'
        });
      } else {
        Swal.fire({
          title: 'Success!',
          text: "Check your EMAIL for the OTP code.",
          icon: 'success',
          confirmButtonText: 'OK'
        }).then((result) => {
          if (result.isConfirmed) {
            openOtpModal();
            $('#fmSignup').off('submit').submit();
          }
        });
      }
    }).fail(() => {
      Swal.fire({
        title: 'Error',
        text: "Unable to verify username. Try again later.",
        icon: 'error',
        confirmButtonText: 'OK'
      });
    });
  });

  function openOtpModal() {
    document.getElementById('otp-modal').classList.remove('hidden');
  }

  function closeOtpModal() {
    document.getElementById('otp-modal').classList.add('hidden');
  }

  $('#frmVerify').on('submit', function (e) {
    e.preventDefault();
    const otp = document.getElementById('otpInput').value;
    if (!otp || otp.length < 4) {
      Swal.fire({
        title: 'Error',
        text: 'Please enter a valid OTP.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    } else {
      e.currentTarget.submit();
    }
  });

  window.addEventListener('DOMContentLoaded', () => {
    const showVerifyPopup = {{#if showVerifyPopup}}true{{else}}false{{/if}};
    if (showVerifyPopup) {
      openOtpModal();
    }
  });

</script>
{{/section}}

<div class="font-semibold rounded-lg shadow-md max-w-3xl mx-auto mt-10 px-4">
  <div class="text-center mb-10">
    <div class="flex justify-center items-center gap-4">
      <img src="/static/imgs/NEWSLANDlogoRmBg.png" alt="logo" class="w-30 sm:w-20" />
      <div class="text-left text-center">
        <h1 class="text-3xl sm:text-4xl text-black-700 tracking-wide font-serif">NEWSLAND</h1>
        <p class="text-sm sm:text-base text-gray-">— News for life —</p>
      </div>
    </div>
  </div>
  <span class="px-8 tw-text-xl">Sign up new account</Span>
  <form id="fmSignup" action="/account/register" method="post" class="bg-white p-8 space-y-6">
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
      <div>
        <label for="txtName" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
        <input type="text" id="txtName" name="name" placeholder="John"
          class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500" />
      </div>
      <div>
        <label for="txtUsername" class="block text-sm font-medium text-gray-700 mb-1">User Name</label>
        <input type="text" id="txtUsername" name="username" placeholder="Doe"
          class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500" />
      </div>
      <div>
        <label for="txtEmail" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
        <input type="text" id="txtEmail" name="email" placeholder="you@example.com"
          class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500" />
      </div>
      <div>
        <label for="txtPhone" class="block text-sm font-medium text-gray-700 mb-1">Phone</label>
        <input type="tel" id="txtPhone" name="number" placeholder="123-456-7890"
          class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500" />
      </div>
      <div>
        <label for="txtPassword" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
        <input type="password" id="txtPassword" name="raw_password" placeholder="••••••••"
          class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500" />
        <small id="passwordError" class="text-red-500 text-xs mt-1 hidden"></small>
      </div>
      <div>
        <label for="txtCPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
        <input type="password" id="txtCPassword" name="cpassword" placeholder="••••••••"
          class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500" />
        <small id="confirmPasswordError" class="text-red-500 text-xs mt-1 hidden"></small>
      </div>
    </div>

    <div class="text-center pt-6">
      <button type="submit"
        class="w-full sm:w-auto px-6 py-3 rounded-md bg-blue-600 text-white font-medium text-sm hover:bg-blue-700 transition duration-300">
        Sign Up
      </button>
      <p class="text-sm text-gray-600 mt-4">Already have an account?
        <a href="/account/login" class="text-blue-600 font-bold hover:underline">Login here</a>
      </p>
    </div>
  </form>
</div>

<!-- OTP Modal -->
<div id="otp-modal" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
  <form id="frmVerify" action="/account/verify-email" method="post"
    class="bg-white p-6 rounded-xl shadow-lg w-full max-w-md relative">
    <button onclick="closeOtpModal()"
      class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 text-xl">✕</button>
    <input type="hidden" name="email" value="{{this.email}}">
    <input type="hidden" name="username" value="{{this.username}}">
    <h2 class="text-xl font-semibold mb-4 text-gray-700">Enter OTP</h2>
    <input type="text" id="otpInput" name="otp"
      class="w-full px-4 py-3 rounded-md bg-gray-100 text-gray-800 text-sm focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500"
      placeholder="Enter the OTP sent to your email" />
    <button type="submit"
      class="mt-4 w-full px-4 py-2 rounded-md bg-blue-600 text-white font-medium hover:bg-blue-700">Verify</button>
  </form>
</div>