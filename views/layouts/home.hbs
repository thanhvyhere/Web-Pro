<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NewsLand - New thing every days</title>
    <link rel="icon" href="/imgs/NEWSLANDlogoRmBg.png" type="image/x-icon">
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
        integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="/css/tailwind.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=League+Spartan:wght@100..900&display=swap"
        rel="stylesheet">
    {{{_sections.css}}}
</head>

<body class="tw-overflow-auto">
    <header>

        <div class="tw-w-full tw-grid tw-grid-cols-[0_1fr_auto] sm:tw-grid-cols-[1fr_3fr_1fr] tw-items-center">
            <div></div>
            <div id="logo-container"
                class="tw-flex tw-justify-left tw-items-center tw-ml-2 tw-h-full sm:tw-justify-center">
                <a href="/">
                    <img id="logo-img" src="/static/imgs/with-slogan-black.png"
                        class="tw-w-[150px] sm:tw-w-[350px] tw-transition-all tw-duration-300 tw-ease-in-out"
                        alt="NewsLand">
                </a>
            </div>

            <div class="tw-flex tw-justify-center tw-items-center tw-pr-4 tw-border-l tw-border-gray-100 tw-gap-3">
                {{#if auth}}
                <a class="nav-link dropdown-toggle" href="#" id="navbarAccount" role="button" data-bs-toggle="dropdown"
                    aria-expanded="false">
                    <img id="img-account" src="/static/imgs/avatar.jpg" alt="" class="img-fluid rounded-circle">
                </a>
                {{else}}
                <a onclick="handleLoginClick(event)" type="button" class="tw-text-black tw-font-semibold">
                    <i class="bi bi-person" style="font-size: 1rem; color: black; font-weight:bold"> SIGN IN </i>

                </a>
                {{/if}}
                <a href="/account/search" class="tw-hidden sm:tw-block">
                    <i class="bi bi-search" style="font-size: 1rem; color: black; font-weight:900"></i>
                </a>
            </div>
        </div>
        <hr class="tw-m-0 tw-border-2 tw-w-full">
        <!-- Menu Category -->
        <div id="nav-container" class="container red topBotomBordersOut group" onmouseleave="hidePanel()">
            <a id="toggleNavleft" type="button">
                <i class="bi bi-list" style="font-size: 1rem; color:black;"></i>
            </a>
            <div role="tablist">
                <a class="navtop tw-uppercase" id="nav-tab-all" data-tabs-target="#data-panel" type="button" role="tab"
                    aria-controls="data-all" aria-selected="false" onmouseenter="switchTab('all')"
                    onmouseleave="hidePanel()">
                    DANH MỤC
                </a>
            </div>
            <div class="tw-absolute tw-w-screen tw-top-full tw-left-0 tw-bg-gray-50 tw-hidden tw-z-10 tw-border-t tw-border-gray-300"
                id="data-panel-all" role="tabpanel" aria-labelledby="data-all" onmouseenter="cancelHidePanel()"
                onmouseleave="hidePanel()">
                <div
                    class="nav-tab-content tw-max-h-screen tw-overflow-auto tw-grid tw-px-1 tw-pt-5 tw-pb-[15%] tw-grid-cols-1 sm:tw-grid-cols-2 lg:tw-grid-cols-5">
                    {{#each categories}}
                    <div>
                        <a class="tw-font-semibold tw-text-[15px] "
                            href="/newspaper/byCat?catId={{CatID}}">{{CatName}}</a>
                        <hr>
                        {{#if children.length}}
                        <ul class="tw-text-gray-600 tw-list-none tw-text-left">
                            {{#each (limit children 3)}}
                            <li class="tw-m-3"><a href="/newspaper/byCat?catId={{CatID}}">{{CatName}}</a></li>
                            {{/each}}
                        </ul>
                        {{/if}}
                    </div>
                    {{/each}}
                </div>
            </div>
            {{#each limitCate}}
            <div class="" role="tablist">
                <a class="navtop tw-uppercase" id="nav-tab-{{_id}}" href="/newspaper/byCat?_id={{_id}}"
                    data-tabs-target="#data-panel" type="button" role="tab" aria-controls="data-{{_id}}"
                    aria-selected="false" onmouseenter="switchTab('{{_id}}')" onmouseleave="hidePanel()">
                    {{CatName}}
                </a>
            </div>
            {{#if children.length}}
            <div class="tw-absolute tw-w-screen tw-top-full tw-left-0 tw-bg-gray-50 tw-hidden tw-z-10 tw-border-t tw-border-gray-300"
                id="data-panel-{{_id}}" role="tabpanel" aria-labelledby="data-{{_id}}" onmouseenter="cancelHidePanel()"
                onmouseleave="hidePanel()">
                <div
                    class="nav-tab-content tw-grid tw-px-[20%] tw-py-5 tw-grid-cols-1 sm:tw-grid-cols-2 lg:tw-grid-cols-4">
                    {{#each children}}
                    <a href="/newspaper/byCat?_id={{_id}}">{{CatName}}</a>
                    {{/each}}
                </div>
            </div>
            {{/if}}
            {{/each}}
        </div>

    </header>
    <div class="tw-flex tw-flex-row tw-min-h-screen card-body">
        {{#if authPremium}}
        <div id="nav-left" class="">
            <div class="tw-flex tw-flex-row tw-mt-5 tw-mb-10 tw-px-5">
                <img src="/imgs/NEWSLANDlogo.png" alt="" class="img-fluid rounded-circle tw-h-[50px] tw-w-[50px]">
                <div class="tw-mx-5">
                    <span class="tw-block tw-font-bold tw-font-[18px]">
                        {{authUser.username}}
                    </span>
                    <span class="tw-block tw-font-bold tw-font-[18px] tw-text-[#F0B617]">
                        {{{getRoleIcon rolename}}}&nbsp;
                        {{authUser.rolename}}
                    </span>
                </div>
            </div>
            <nav class="nav flex-column">
                {{#with (getFirstItem lcFeatureRoles) as |firstRole|}}
                <a class="nav-link active-link" href="/{{firstRole.RoleName}}/{{firstRole.PathName}}">
                    {{{firstRole.Icon}}}&nbsp;{{firstRole.FeatureName}}
                </a>
                {{/with}}
                <!-- Links -->
                {{#each (skipFirst lcFeatureRoles)}}
                <a class="nav-link" href="/{{RoleName}}/{{PathName}}">{{{Icon}}}&nbsp;{{FeatureName}}</a>
                {{/each}}
            </nav>
        </div>
        {{/if}}
        <main class="tw-mt-[5%] sm:tw-mt-[12%]">
            {{{body}}}
        </main>
    </div>
    
    <footer>
        <hr>
        <div>
            <div id="footer-contact" class="d-flex flex-row justify-content-between align-items-center">
                <div class="mb-3 d-flex flex-row">
                    <img class="tw-w-full" id="brand-logo" src="/static/imgs/with-slogan-white.png" alt="">
                </div>
                <div>
                    <h6>Trụ sở chính: Thành phố Hồ Chí Minh</h6>
                </div>
                <div>
                    <h6>Số điện thoại - Hotline: 01234556789</h6>
                    <h6>Email: newsland.newforlife@gmail.com</h6>
                </div>
            </div>
        </div>

    </footer>
    
    <button id="scrollToTopBtn" class="tw-hidden tw-fixed tw-right-5 tw-bottom-5 tw-w-[75px] tw-h-[75px]
         tw-z-50 tw-bg-white tw-text-black tw-px-4 tw-py-2 
         tw-rounded-full tw-shadow-lg hover:tw-bg-yellow-200 tw-transition-opacity tw-duration-300">
        <i class="bi bi-arrow-bar-up tw-text-3xl"></i>
    </button>
   
        
    {{> vwAccount/login }}
    {{> vwAccount/register }}
    
{{#if showErrors}}
<div id="error-modal" class="tw-relative tw-z-10" aria-labelledby="dialog-title" role="dialog" aria-modal="true">
  <div class="tw-fixed tw-inset-0 tw-bg-gray-500/75 tw-transition-opacity" aria-hidden="true"></div>

  <div class="tw-fixed tw-inset-0 tw-z-10 tw-w-screen tw-overflow-y-auto">
    <div class="tw-flex tw-min-h-full tw-items-end tw-justify-center tw-p-4 tw-text-center sm:tw-items-center sm:tw-p-0">
      <div class="tw-relative tw-transform tw-overflow-hidden tw-rounded-lg tw-bg-white tw-text-left tw-shadow-xl tw-transition-all sm:tw-my-8 sm:tw-w-full sm:tw-max-w-lg">
        <div class="tw-bg-white tw-px-4 tw-pt-5 tw-pb-4 sm:tw-p-6 sm:tw-pb-4">
          <div class="sm:tw-flex sm:tw-items-start">
            <div class="tw-mx-auto tw-flex tw-size-12 tw-shrink-0 tw-items-center tw-justify-center tw-rounded-full tw-bg-red-100 sm:tw-mx-0 sm:tw-size-10">
              <svg class="tw-size-6 tw-text-red-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3m0 4h.01m-.01-7a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0v-3z" />
                <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="1.5" fill="none" />
              </svg>
            </div>
            <div class="tw-mt-3 tw-text-center sm:tw-mt-0 sm:tw-ml-4 sm:tw-text-left">
              <h3 class="tw-text-base tw-font-semibold tw-text-gray-900" id="dialog-title">Login Error</h3>
              <div class="tw-mt-2">
                <p class="tw-text-sm tw-text-gray-500">
                  Incorrect username or password. Please try again.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="tw-bg-gray-50 tw-px-4 tw-py-3 sm:tw-flex sm:tw-flex-row-reverse sm:tw-px-6">
          <button type="button" onclick="closeErrorModal()" class="tw-inline-flex tw-w-full tw-justify-center tw-rounded-md tw-bg-blue-600 tw-px-3 tw-py-2 tw-text-sm tw-font-semibold tw-text-white tw-shadow-sm hover:tw-bg-blue-500 sm:tw-ml-3 sm:tw-w-auto">OK</button>
        </div>
      </div>
    </div>
  </div>
</div>
{{/if}}
    <script>
      function toggleModal(showId, hideId) {
        const showModal = document.getElementById(showId);
        const hideModal = document.getElementById(hideId);

        // Ẩn modal không cần hiển thị
        hideModal.classList.add('tw-hidden');
        hideModal.setAttribute('aria-hidden', 'true');

        // Hiện modal cần hiển thị
        showModal.classList.remove('tw-hidden');
        showModal.setAttribute('aria-hidden', 'false');
        }

        // Gắn với sự kiện click
        function handleLoginClick(event) {
        event.preventDefault();
        toggleModal('loginModel', 'registerModel');
        }

        function handleRegisterClick(event) {
        event.preventDefault();
        toggleModal('registerModel', 'loginModel');
        }

      function handleLogoutClick() {
        event.preventDefault();
          if (authUser) {
            const modal =  document.getElementById('logoutModal');
            const main = document.getElementById('mainContent');
            modal.classList.remove('tw-hidden');
            modal.setAttribute('aria-hidden', 'false');
            main.setAttribute('aria-hidden', 'true');
          }
      }

      function closeModal(gohome = false) {
        console.log("gohome:", gohome);
        const modal = document.querySelector('.popupModel');
        const main = document.getElementById('mainContent');
        modal.classList.add('tw-hidden');
        modal.setAttribute('aria-hidden', 'true');
        main.setAttribute('aria-hidden', 'false');
        
        if (gohome) {
          window.location.href = '/';
        } else {
          window.location.reload();
        }
          
      }
      
    </script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script>
        function closeErrorModal() {
            const modal = document.getElementById("error-modal");
            if (modal) {
            modal.style.display = "none";
            }
        }
        </script>
    {{{_sections.script}}}
   <script>
    document.addEventListener("DOMContentLoaded", () => {
        const btn = document.getElementById("scrollToTopBtn");

        window.addEventListener("scroll", () => {
        const scrollTop = window.scrollY;
        const windowHeight = window.innerHeight;
        const fullHeight = document.body.scrollHeight;

        if (scrollTop + windowHeight >= (1 / 3) * fullHeight) {
            btn.classList.remove("tw-hidden");
        } else {
            btn.classList.add("tw-hidden");
        }
        });

        btn.addEventListener("click", () => {
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        });
        });
    });
    </script>

    <script>
        const swalWithCustomButtons = Swal.mixin({
            customClass: {
                confirmButton: "tw-bg-black tw-rounded-sm tw-text-white tw-border-0 tw-py-3 tw-px-2 tw-ml-2",
                cancelButton: "tw-bg-grey-500 tw-rounded-sm tw-text-black tw-border-0 tw-py-3 tw-px-2 tw-ml-2"
            },
            animation: true,
            showClass: {
                popup: `
                    animate__animated
                    animate__fadeInUp
                    animate__faster
                    `
            },
            hideClass: {
                popup: `
                    animate__animated
                    animate__fadeOutDown
                    animate__faster
                    `
            },
            buttonsStyling: false
        });
    </script>
    <script>
        $(document).ready(function () {

            if (!{{ auth }}) {
            $('#toggleNavleft').on('click', function () {

                swalWithCustomButtons.fire({
                    title: 'Bạn chưa đăng nhập',
                    text: 'Bạn cần đăng nhập để truy cập các tính năng này.',

                    showCancelButton: true,
                    confirmButtonText: 'Đăng nhập',
                    confirmButtonColor: "#000000",
                    cancelButtonText: 'Hủy',

                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/account/login';  // Điều hướng đến trang đăng nhập
                    }
                });
            });
        } 
            else if ({{ auth }} && parseInt({{ authUser.permission }}) === 1) {  // Kiểm tra quyền của người dùng
            $('#toggleNavleft').on('click', function () {
                swalWithCustomButtons.fire({
                    title: 'Bạn không đủ quyền',
                    text: 'Bạn cần đăng ký premium để truy cập các tính năng này.',
                    showCancelButton: true,
                    confirmButtonText: 'Subscribe',
                    cancelButtonText: 'Hủy',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/account/premium';
                    }
                });
            });
        }
            else {
            $('#toggleNavleft').on('click', function () {
                if ($('#nav-left').css('display') === 'none') {
                    $('#nav-left').css('display', 'block');
                } else {
                    $('#nav-left').css('display', 'none');
                }
            });
        }
        });
    </script>
    <script>
        let hideTimeout;

        function switchTab(id) {
            clearTimeout(hideTimeout);

            document.querySelectorAll("[id^='data-panel']").forEach(panel => {
                panel.classList.add("tw-hidden");
            });

            const targetPanel = document.getElementById(`data-panel-${id}`);
            if (targetPanel) {
                targetPanel.classList.remove("tw-hidden");
            }
        }

        function cancelHidePanel() {
            clearTimeout(hideTimeout);
        }

        function hidePanel() {
            hideTimeout = setTimeout(() => {
                document.querySelectorAll("[id^='data-panel']").forEach(panel => {
                    panel.classList.add("tw-hidden");
                });
            }, 200);
        }
    </script>
    <script>
        let lastScrollY = window.scrollY;
        const logo = document.getElementById("logo-img");
        const logoContainer = document.getElementById("logo-container");
        const navContainer = document.getElementById("nav-container");

        window.addEventListener("scroll", () => {
            const currentScrollY = window.scrollY;

            if (currentScrollY > lastScrollY && currentScrollY > 50) {
                // Scroll xuống
                logo.src = "/static/imgs/black.png";
                logo.classList.remove("tw-w-[150px]", "sm:tw-w-[350px]");
                logo.classList.add("tw-w-[100px]", "sm:tw-w-[200px]");
                navContainer.classList.add("tw-hidden");
            } else if (currentScrollY < lastScrollY) {
                logo.src = "/static/imgs/with-slogan-black.png";
                logo.classList.remove("tw-w-[100px]", "sm:tw-w-[200px]");
                logo.classList.add("tw-w-[150px]", "sm:tw-w-[350px]");
                navContainer.classList.remove("tw-hidden");
            }

            lastScrollY = currentScrollY;
        });
    </script>

    <script>
        document.getElementById('txtPhone').addEventListener('input', function (e) {
            let input = e.target.value.replace(/\D/g, '');
            if (input.length > 3 && input.length <= 6) {
            input = input.slice(0, 3) + '-' + input.slice(3);
            } else if (input.length > 6) {
            input = input.slice(0, 3) + '-' + input.slice(3, 6) + '-' + input.slice(6, 10);
            }
            e.target.value = input;
        });

        function validatePasswordField() {
            const password = document.querySelector('#txtPassword').value;
            const errorField = document.querySelector('#passwordError');
            const minLength = 8;
            const hasUpper = /[A-Z]/.test(password);
            const hasLower = /[a-z]/.test(password);
            const hasNumber = /[0-9]/.test(password);
            const hasSpecialChar = /[!@#\$%\^\&*\)\(+=._-]/.test(password);
            if (password.length < minLength) {
                    errorField.textContent = 'Password must be at least 8 characters long.';
                    errorField.classList.remove('tw-hidden');
            } else if (!hasUpper || !hasLower || !hasNumber || !hasSpecialChar) {
                errorField.textContent = 'Password must include uppercase, lowercase, number, and special character.';
                errorField.classList.remove('tw-hidden');
            } else {
                errorField.textContent = '';
                errorField.classList.add('tw-hidden');
            }
        }

        function validateConfirmPasswordField() {
            const password = document.querySelector('#txtPassword').value;
            const confirmPassword = document.querySelector('#txtCPassword').value;
            const confirmError = document.querySelector('#confirmPasswordError');

             if (confirmPassword !== password) {
                confirmError.textContent = 'Passwords do not match.';
                confirmError.classList.remove('tw-hidden');
            } else {
                confirmError.textContent = '';
                confirmError.classList.add('tw-hidden');
            }
        }

        document.querySelector('#txtPassword').addEventListener('input', validatePasswordField);
        document.querySelector('#txtPassword').addEventListener('blur', validatePasswordField);
        document.querySelector('#txtCPassword').addEventListener('input', validateConfirmPasswordField);
        document.querySelector('#txtCPassword').addEventListener('blur', validateConfirmPasswordField);

        function checkValidEmail() {
            const email = document.querySelector('#txtEmail').value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (email.length === 0 || !emailRegex.test(email)) {
            document.querySelector('#txtEmail').select();
            return false;
            }
            return true;
        }

        function checkValidPassword() {
            const password = document.querySelector('#txtPassword').value;
            const minLength = 8;
            const hasUpper = /[A-Z]/.test(password);
            const hasLower = /[a-z]/.test(password);
            const hasNumber = /[0-9]/.test(password);
            const hasSpecialChar = /[!@#\$%\^\&*\)\(+=._-]/.test(password);

            if (password.length < minLength || !hasUpper || !hasLower || !hasNumber || !hasSpecialChar) {
            Swal.fire({
                title: 'Warning',
                text: "Password must be at least 8 characters and include uppercase, lowercase, number, and special character.",
                icon: 'warning',
                confirmButtonText: 'OK'
            });
            document.querySelector('#txtPassword').select();
            return false;
            }
            return true;
        }

  $('#fmSignup').on('submit', function (e) {
    e.preventDefault();
    const username = $('#txtUsername').val();
    const password = $('#txtPassword').val();
    const confirmPassword = $('#txtCPassword').val();

    if (!checkValidPassword()) return;

    if (password !== confirmPassword) {
      Swal.fire({
        title: 'Error',
        text: "Passwords do not match. Please re-enter.",
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    if (username.length === 0) {
      Swal.fire({
        title: 'Warning',
        text: "Username cannot be empty.",
        icon: 'warning',
        confirmButtonText: 'OK'
      });
      return;
    }

    if (!checkValidEmail()) {
      Swal.fire({
        title: 'Error',
        text: "Invalid email format.",
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    $.getJSON(`/account/is-available?username=${username}`, function (data) {
      if (data === false) {
        Swal.fire({
          title: 'Warning',
          text: "Username not available. Please choose another.",
          icon: 'warning',
          confirmButtonText: 'OK'
        });
      } else {
        Swal.fire({
          title: 'Success!',
          text: "Check your EMAIL for the OTP code.",
          icon: 'success',
          confirmButtonText: 'OK'
        }).then((result) => {
          if (result.isConfirmed) {
            goToStep2();
            $('#fmSignup').off('submit').submit();
          }
        });
      }
    }).fail(() => {
      Swal.fire({
        title: 'Error',
        text: "Unable to verify username. Try again later.",
        icon: 'error',
        confirmButtonText: 'OK'
      });
    });
  });



  $('#frmVerify').on('submit', function (e) {
    e.preventDefault();
    const otp = document.getElementById('otpInput').value;
    if (!otp || otp.length < 4) {
      Swal.fire({
        title: 'Error',
        text: 'Please enter a valid OTP.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    } else {
      e.currentTarget.submit();
      handleLoginClick(event);
    }
  });

  window.addEventListener('DOMContentLoaded', () => {
    const showVerifyPopup = {{#if showVerifyPopup}}true{{else}}false{{/if}};
    if (showVerifyPopup) {
      openOtpModal();
    }
  });

</script>
<script>
    function goToStep2() {
    document.getElementById("step1").classList.add("tw-hidden");
    document.getElementById("step2").classList.remove("tw-hidden");

    document.getElementById("step1Indicator").classList.remove("tw-bg-blue-600", "tw-text-white");
    document.getElementById("step1Indicator").classList.add("tw-bg-gray-300", "tw-text-black");

    document.getElementById("step2Indicator").classList.remove("tw-bg-gray-300", "tw-text-black");
    document.getElementById("step2Indicator").classList.add("tw-bg-blue-600", "tw-text-white");
    }

    function goToStep1() {
    document.getElementById("step2").classList.add("tw-hidden");
    document.getElementById("step1").classList.remove("tw-hidden");

    document.getElementById("step2Indicator").classList.remove("tw-bg-blue-600", "tw-text-white");
    document.getElementById("step2Indicator").classList.add("tw-bg-gray-300", "tw-text-black");

    document.getElementById("step1Indicator").classList.remove("tw-bg-gray-300", "tw-text-black");
    document.getElementById("step1Indicator").classList.add("tw-bg-blue-600", "tw-text-white");
    }
</script>

</body>

</html>